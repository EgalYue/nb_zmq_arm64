// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ninebot_zmq/ts2WithID.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ninebot_5fzmq_2fts2WithID_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ninebot_5fzmq_2fts2WithID_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ninebot_5fzmq_2fts2WithID_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ninebot_5fzmq_2fts2WithID_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ninebot_5fzmq_2fts2WithID_2eproto;
namespace Segway_proto {
class Ts2WithID;
class Ts2WithIDDefaultTypeInternal;
extern Ts2WithIDDefaultTypeInternal _Ts2WithID_default_instance_;
}  // namespace Segway_proto
PROTOBUF_NAMESPACE_OPEN
template<> ::Segway_proto::Ts2WithID* Arena::CreateMaybeMessage<::Segway_proto::Ts2WithID>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Segway_proto {

// ===================================================================

class Ts2WithID :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Segway_proto.Ts2WithID) */ {
 public:
  Ts2WithID();
  virtual ~Ts2WithID();

  Ts2WithID(const Ts2WithID& from);
  Ts2WithID(Ts2WithID&& from) noexcept
    : Ts2WithID() {
    *this = ::std::move(from);
  }

  inline Ts2WithID& operator=(const Ts2WithID& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ts2WithID& operator=(Ts2WithID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Ts2WithID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Ts2WithID* internal_default_instance() {
    return reinterpret_cast<const Ts2WithID*>(
               &_Ts2WithID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Ts2WithID* other);
  friend void swap(Ts2WithID& a, Ts2WithID& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Ts2WithID* New() const final {
    return CreateMaybeMessage<Ts2WithID>(nullptr);
  }

  Ts2WithID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Ts2WithID>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Ts2WithID& from);
  void MergeFrom(const Ts2WithID& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Ts2WithID* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Segway_proto.Ts2WithID";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ninebot_5fzmq_2fts2WithID_2eproto);
    return ::descriptor_table_ninebot_5fzmq_2fts2WithID_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 time_stamp_pub = 1;
  void clear_time_stamp_pub();
  static const int kTimeStampPubFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp_pub() const;
  void set_time_stamp_pub(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 time_stamp_forward = 2;
  void clear_time_stamp_forward();
  static const int kTimeStampForwardFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp_forward() const;
  void set_time_stamp_forward(::PROTOBUF_NAMESPACE_ID::int64 value);

  // int64 frame_id = 3;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int64 frame_id() const;
  void set_frame_id(::PROTOBUF_NAMESPACE_ID::int64 value);

  // @@protoc_insertion_point(class_scope:Segway_proto.Ts2WithID)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp_pub_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_stamp_forward_;
  ::PROTOBUF_NAMESPACE_ID::int64 frame_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ninebot_5fzmq_2fts2WithID_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Ts2WithID

// int64 time_stamp_pub = 1;
inline void Ts2WithID::clear_time_stamp_pub() {
  time_stamp_pub_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Ts2WithID::time_stamp_pub() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Ts2WithID.time_stamp_pub)
  return time_stamp_pub_;
}
inline void Ts2WithID::set_time_stamp_pub(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  time_stamp_pub_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Ts2WithID.time_stamp_pub)
}

// int64 time_stamp_forward = 2;
inline void Ts2WithID::clear_time_stamp_forward() {
  time_stamp_forward_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Ts2WithID::time_stamp_forward() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Ts2WithID.time_stamp_forward)
  return time_stamp_forward_;
}
inline void Ts2WithID::set_time_stamp_forward(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  time_stamp_forward_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Ts2WithID.time_stamp_forward)
}

// int64 frame_id = 3;
inline void Ts2WithID::clear_frame_id() {
  frame_id_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 Ts2WithID::frame_id() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Ts2WithID.frame_id)
  return frame_id_;
}
inline void Ts2WithID::set_frame_id(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Ts2WithID.frame_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Segway_proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ninebot_5fzmq_2fts2WithID_2eproto
