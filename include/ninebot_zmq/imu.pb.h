// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ninebot_zmq/imu.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ninebot_5fzmq_2fimu_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ninebot_5fzmq_2fimu_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "ninebot_zmq/sensor_common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ninebot_5fzmq_2fimu_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ninebot_5fzmq_2fimu_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ninebot_5fzmq_2fimu_2eproto;
namespace Segway_proto {
class Acc_xyz;
class Acc_xyzDefaultTypeInternal;
extern Acc_xyzDefaultTypeInternal _Acc_xyz_default_instance_;
class Gyro_xyz;
class Gyro_xyzDefaultTypeInternal;
extern Gyro_xyzDefaultTypeInternal _Gyro_xyz_default_instance_;
class IMU;
class IMUDefaultTypeInternal;
extern IMUDefaultTypeInternal _IMU_default_instance_;
class StampedIMU;
class StampedIMUDefaultTypeInternal;
extern StampedIMUDefaultTypeInternal _StampedIMU_default_instance_;
}  // namespace Segway_proto
PROTOBUF_NAMESPACE_OPEN
template<> ::Segway_proto::Acc_xyz* Arena::CreateMaybeMessage<::Segway_proto::Acc_xyz>(Arena*);
template<> ::Segway_proto::Gyro_xyz* Arena::CreateMaybeMessage<::Segway_proto::Gyro_xyz>(Arena*);
template<> ::Segway_proto::IMU* Arena::CreateMaybeMessage<::Segway_proto::IMU>(Arena*);
template<> ::Segway_proto::StampedIMU* Arena::CreateMaybeMessage<::Segway_proto::StampedIMU>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Segway_proto {

// ===================================================================

class Acc_xyz :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Segway_proto.Acc_xyz) */ {
 public:
  Acc_xyz();
  virtual ~Acc_xyz();

  Acc_xyz(const Acc_xyz& from);
  Acc_xyz(Acc_xyz&& from) noexcept
    : Acc_xyz() {
    *this = ::std::move(from);
  }

  inline Acc_xyz& operator=(const Acc_xyz& from) {
    CopyFrom(from);
    return *this;
  }
  inline Acc_xyz& operator=(Acc_xyz&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Acc_xyz& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Acc_xyz* internal_default_instance() {
    return reinterpret_cast<const Acc_xyz*>(
               &_Acc_xyz_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Acc_xyz* other);
  friend void swap(Acc_xyz& a, Acc_xyz& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Acc_xyz* New() const final {
    return CreateMaybeMessage<Acc_xyz>(nullptr);
  }

  Acc_xyz* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Acc_xyz>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Acc_xyz& from);
  void MergeFrom(const Acc_xyz& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Acc_xyz* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Segway_proto.Acc_xyz";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ninebot_5fzmq_2fimu_2eproto);
    return ::descriptor_table_ninebot_5fzmq_2fimu_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:Segway_proto.Acc_xyz)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ninebot_5fzmq_2fimu_2eproto;
};
// -------------------------------------------------------------------

class Gyro_xyz :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Segway_proto.Gyro_xyz) */ {
 public:
  Gyro_xyz();
  virtual ~Gyro_xyz();

  Gyro_xyz(const Gyro_xyz& from);
  Gyro_xyz(Gyro_xyz&& from) noexcept
    : Gyro_xyz() {
    *this = ::std::move(from);
  }

  inline Gyro_xyz& operator=(const Gyro_xyz& from) {
    CopyFrom(from);
    return *this;
  }
  inline Gyro_xyz& operator=(Gyro_xyz&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Gyro_xyz& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Gyro_xyz* internal_default_instance() {
    return reinterpret_cast<const Gyro_xyz*>(
               &_Gyro_xyz_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Gyro_xyz* other);
  friend void swap(Gyro_xyz& a, Gyro_xyz& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Gyro_xyz* New() const final {
    return CreateMaybeMessage<Gyro_xyz>(nullptr);
  }

  Gyro_xyz* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Gyro_xyz>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Gyro_xyz& from);
  void MergeFrom(const Gyro_xyz& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Gyro_xyz* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Segway_proto.Gyro_xyz";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ninebot_5fzmq_2fimu_2eproto);
    return ::descriptor_table_ninebot_5fzmq_2fimu_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:Segway_proto.Gyro_xyz)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ninebot_5fzmq_2fimu_2eproto;
};
// -------------------------------------------------------------------

class IMU :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Segway_proto.IMU) */ {
 public:
  IMU();
  virtual ~IMU();

  IMU(const IMU& from);
  IMU(IMU&& from) noexcept
    : IMU() {
    *this = ::std::move(from);
  }

  inline IMU& operator=(const IMU& from) {
    CopyFrom(from);
    return *this;
  }
  inline IMU& operator=(IMU&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IMU& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IMU* internal_default_instance() {
    return reinterpret_cast<const IMU*>(
               &_IMU_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(IMU* other);
  friend void swap(IMU& a, IMU& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IMU* New() const final {
    return CreateMaybeMessage<IMU>(nullptr);
  }

  IMU* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IMU>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IMU& from);
  void MergeFrom(const IMU& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IMU* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Segway_proto.IMU";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ninebot_5fzmq_2fimu_2eproto);
    return ::descriptor_table_ninebot_5fzmq_2fimu_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Segway_proto.Acc_xyz acc_xyz = 1;
  bool has_acc_xyz() const;
  void clear_acc_xyz();
  static const int kAccXyzFieldNumber = 1;
  const ::Segway_proto::Acc_xyz& acc_xyz() const;
  ::Segway_proto::Acc_xyz* release_acc_xyz();
  ::Segway_proto::Acc_xyz* mutable_acc_xyz();
  void set_allocated_acc_xyz(::Segway_proto::Acc_xyz* acc_xyz);

  // .Segway_proto.Gyro_xyz gyro_xyz = 2;
  bool has_gyro_xyz() const;
  void clear_gyro_xyz();
  static const int kGyroXyzFieldNumber = 2;
  const ::Segway_proto::Gyro_xyz& gyro_xyz() const;
  ::Segway_proto::Gyro_xyz* release_gyro_xyz();
  ::Segway_proto::Gyro_xyz* mutable_gyro_xyz();
  void set_allocated_gyro_xyz(::Segway_proto::Gyro_xyz* gyro_xyz);

  // @@protoc_insertion_point(class_scope:Segway_proto.IMU)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::Segway_proto::Acc_xyz* acc_xyz_;
  ::Segway_proto::Gyro_xyz* gyro_xyz_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ninebot_5fzmq_2fimu_2eproto;
};
// -------------------------------------------------------------------

class StampedIMU :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Segway_proto.StampedIMU) */ {
 public:
  StampedIMU();
  virtual ~StampedIMU();

  StampedIMU(const StampedIMU& from);
  StampedIMU(StampedIMU&& from) noexcept
    : StampedIMU() {
    *this = ::std::move(from);
  }

  inline StampedIMU& operator=(const StampedIMU& from) {
    CopyFrom(from);
    return *this;
  }
  inline StampedIMU& operator=(StampedIMU&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StampedIMU& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StampedIMU* internal_default_instance() {
    return reinterpret_cast<const StampedIMU*>(
               &_StampedIMU_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(StampedIMU* other);
  friend void swap(StampedIMU& a, StampedIMU& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StampedIMU* New() const final {
    return CreateMaybeMessage<StampedIMU>(nullptr);
  }

  StampedIMU* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StampedIMU>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StampedIMU& from);
  void MergeFrom(const StampedIMU& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StampedIMU* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Segway_proto.StampedIMU";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ninebot_5fzmq_2fimu_2eproto);
    return ::descriptor_table_ninebot_5fzmq_2fimu_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .Segway_proto.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::Segway_proto::Header& header() const;
  ::Segway_proto::Header* release_header();
  ::Segway_proto::Header* mutable_header();
  void set_allocated_header(::Segway_proto::Header* header);

  // .Segway_proto.IMU data = 2;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  const ::Segway_proto::IMU& data() const;
  ::Segway_proto::IMU* release_data();
  ::Segway_proto::IMU* mutable_data();
  void set_allocated_data(::Segway_proto::IMU* data);

  // @@protoc_insertion_point(class_scope:Segway_proto.StampedIMU)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::Segway_proto::Header* header_;
  ::Segway_proto::IMU* data_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ninebot_5fzmq_2fimu_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Acc_xyz

// float x = 1;
inline void Acc_xyz::clear_x() {
  x_ = 0;
}
inline float Acc_xyz::x() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Acc_xyz.x)
  return x_;
}
inline void Acc_xyz::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Acc_xyz.x)
}

// float y = 2;
inline void Acc_xyz::clear_y() {
  y_ = 0;
}
inline float Acc_xyz::y() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Acc_xyz.y)
  return y_;
}
inline void Acc_xyz::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Acc_xyz.y)
}

// float z = 3;
inline void Acc_xyz::clear_z() {
  z_ = 0;
}
inline float Acc_xyz::z() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Acc_xyz.z)
  return z_;
}
inline void Acc_xyz::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Acc_xyz.z)
}

// -------------------------------------------------------------------

// Gyro_xyz

// float x = 1;
inline void Gyro_xyz::clear_x() {
  x_ = 0;
}
inline float Gyro_xyz::x() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Gyro_xyz.x)
  return x_;
}
inline void Gyro_xyz::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Gyro_xyz.x)
}

// float y = 2;
inline void Gyro_xyz::clear_y() {
  y_ = 0;
}
inline float Gyro_xyz::y() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Gyro_xyz.y)
  return y_;
}
inline void Gyro_xyz::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Gyro_xyz.y)
}

// float z = 3;
inline void Gyro_xyz::clear_z() {
  z_ = 0;
}
inline float Gyro_xyz::z() const {
  // @@protoc_insertion_point(field_get:Segway_proto.Gyro_xyz.z)
  return z_;
}
inline void Gyro_xyz::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:Segway_proto.Gyro_xyz.z)
}

// -------------------------------------------------------------------

// IMU

// .Segway_proto.Acc_xyz acc_xyz = 1;
inline bool IMU::has_acc_xyz() const {
  return this != internal_default_instance() && acc_xyz_ != nullptr;
}
inline void IMU::clear_acc_xyz() {
  if (GetArenaNoVirtual() == nullptr && acc_xyz_ != nullptr) {
    delete acc_xyz_;
  }
  acc_xyz_ = nullptr;
}
inline const ::Segway_proto::Acc_xyz& IMU::acc_xyz() const {
  const ::Segway_proto::Acc_xyz* p = acc_xyz_;
  // @@protoc_insertion_point(field_get:Segway_proto.IMU.acc_xyz)
  return p != nullptr ? *p : *reinterpret_cast<const ::Segway_proto::Acc_xyz*>(
      &::Segway_proto::_Acc_xyz_default_instance_);
}
inline ::Segway_proto::Acc_xyz* IMU::release_acc_xyz() {
  // @@protoc_insertion_point(field_release:Segway_proto.IMU.acc_xyz)
  
  ::Segway_proto::Acc_xyz* temp = acc_xyz_;
  acc_xyz_ = nullptr;
  return temp;
}
inline ::Segway_proto::Acc_xyz* IMU::mutable_acc_xyz() {
  
  if (acc_xyz_ == nullptr) {
    auto* p = CreateMaybeMessage<::Segway_proto::Acc_xyz>(GetArenaNoVirtual());
    acc_xyz_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Segway_proto.IMU.acc_xyz)
  return acc_xyz_;
}
inline void IMU::set_allocated_acc_xyz(::Segway_proto::Acc_xyz* acc_xyz) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete acc_xyz_;
  }
  if (acc_xyz) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      acc_xyz = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, acc_xyz, submessage_arena);
    }
    
  } else {
    
  }
  acc_xyz_ = acc_xyz;
  // @@protoc_insertion_point(field_set_allocated:Segway_proto.IMU.acc_xyz)
}

// .Segway_proto.Gyro_xyz gyro_xyz = 2;
inline bool IMU::has_gyro_xyz() const {
  return this != internal_default_instance() && gyro_xyz_ != nullptr;
}
inline void IMU::clear_gyro_xyz() {
  if (GetArenaNoVirtual() == nullptr && gyro_xyz_ != nullptr) {
    delete gyro_xyz_;
  }
  gyro_xyz_ = nullptr;
}
inline const ::Segway_proto::Gyro_xyz& IMU::gyro_xyz() const {
  const ::Segway_proto::Gyro_xyz* p = gyro_xyz_;
  // @@protoc_insertion_point(field_get:Segway_proto.IMU.gyro_xyz)
  return p != nullptr ? *p : *reinterpret_cast<const ::Segway_proto::Gyro_xyz*>(
      &::Segway_proto::_Gyro_xyz_default_instance_);
}
inline ::Segway_proto::Gyro_xyz* IMU::release_gyro_xyz() {
  // @@protoc_insertion_point(field_release:Segway_proto.IMU.gyro_xyz)
  
  ::Segway_proto::Gyro_xyz* temp = gyro_xyz_;
  gyro_xyz_ = nullptr;
  return temp;
}
inline ::Segway_proto::Gyro_xyz* IMU::mutable_gyro_xyz() {
  
  if (gyro_xyz_ == nullptr) {
    auto* p = CreateMaybeMessage<::Segway_proto::Gyro_xyz>(GetArenaNoVirtual());
    gyro_xyz_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Segway_proto.IMU.gyro_xyz)
  return gyro_xyz_;
}
inline void IMU::set_allocated_gyro_xyz(::Segway_proto::Gyro_xyz* gyro_xyz) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete gyro_xyz_;
  }
  if (gyro_xyz) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      gyro_xyz = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, gyro_xyz, submessage_arena);
    }
    
  } else {
    
  }
  gyro_xyz_ = gyro_xyz;
  // @@protoc_insertion_point(field_set_allocated:Segway_proto.IMU.gyro_xyz)
}

// -------------------------------------------------------------------

// StampedIMU

// .Segway_proto.Header header = 1;
inline bool StampedIMU::has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline const ::Segway_proto::Header& StampedIMU::header() const {
  const ::Segway_proto::Header* p = header_;
  // @@protoc_insertion_point(field_get:Segway_proto.StampedIMU.header)
  return p != nullptr ? *p : *reinterpret_cast<const ::Segway_proto::Header*>(
      &::Segway_proto::_Header_default_instance_);
}
inline ::Segway_proto::Header* StampedIMU::release_header() {
  // @@protoc_insertion_point(field_release:Segway_proto.StampedIMU.header)
  
  ::Segway_proto::Header* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::Segway_proto::Header* StampedIMU::mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::Segway_proto::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Segway_proto.StampedIMU.header)
  return header_;
}
inline void StampedIMU::set_allocated_header(::Segway_proto::Header* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:Segway_proto.StampedIMU.header)
}

// .Segway_proto.IMU data = 2;
inline bool StampedIMU::has_data() const {
  return this != internal_default_instance() && data_ != nullptr;
}
inline void StampedIMU::clear_data() {
  if (GetArenaNoVirtual() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
inline const ::Segway_proto::IMU& StampedIMU::data() const {
  const ::Segway_proto::IMU* p = data_;
  // @@protoc_insertion_point(field_get:Segway_proto.StampedIMU.data)
  return p != nullptr ? *p : *reinterpret_cast<const ::Segway_proto::IMU*>(
      &::Segway_proto::_IMU_default_instance_);
}
inline ::Segway_proto::IMU* StampedIMU::release_data() {
  // @@protoc_insertion_point(field_release:Segway_proto.StampedIMU.data)
  
  ::Segway_proto::IMU* temp = data_;
  data_ = nullptr;
  return temp;
}
inline ::Segway_proto::IMU* StampedIMU::mutable_data() {
  
  if (data_ == nullptr) {
    auto* p = CreateMaybeMessage<::Segway_proto::IMU>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Segway_proto.StampedIMU.data)
  return data_;
}
inline void StampedIMU::set_allocated_data(::Segway_proto::IMU* data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete data_;
  }
  if (data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:Segway_proto.StampedIMU.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Segway_proto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ninebot_5fzmq_2fimu_2eproto
